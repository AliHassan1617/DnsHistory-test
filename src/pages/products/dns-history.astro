---
import Layout from '../../layouts/Layout.astro';
import Navbar from '../../components/Navbar.astro';
import Footer from '../../components/Footer.astro';
import Button from '../../components/ui/Button.astro';
import Card from '../../components/ui/Card.astro';
import CardHeader from '../../components/ui/CardHeader.astro';
import CardContent from '../../components/ui/CardContent.astro';
import CardTitle from '../../components/ui/CardTitle.astro';
import CardDescription from '../../components/ui/CardDescription.astro';
import productsData from '../../data/products.json';

const { dnsHistory } = productsData;
---

<Layout title="DNS History API - Zoros.io" description="Access comprehensive historical DNS records and infrastructure data with our developer-first API">
  <Navbar />
  <main>
    <!-- Hero Section -->
    <section class="relative min-h-[80vh] flex items-center justify-center overflow-hidden">
      <!-- Background -->
      <div class="absolute inset-0 bg-gradient-to-br from-blue-900/20 via-purple-900/20 to-pink-900/20"></div>
      
      <!-- Glass morphism background elements -->
      <div class="absolute top-1/4 left-1/4 w-72 h-72 bg-blue-500/10 rounded-full blur-3xl"></div>
      <div class="absolute bottom-1/4 right-1/4 w-96 h-96 bg-purple-500/10 rounded-full blur-3xl"></div>
      
      <!-- Content -->
      <div class="relative z-10 container mx-auto px-4 sm:px-6 lg:px-8 pt-20">
        <div class="text-center max-w-4xl mx-auto">
          <!-- Badge -->
          <div class="inline-flex items-center px-4 py-2 rounded-full glass border border-white/20 text-sm font-medium text-white/90 mb-8">
            <span class="w-2 h-2 bg-green-400 rounded-full mr-2"></span>
            Infrastructure Intelligence
          </div>
          
          <!-- Main heading -->
          <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-white mb-6 leading-tight">
            {dnsHistory.hero.title}
          </h1>
          
          <!-- Subtitle -->
          <p class="text-xl sm:text-2xl text-white/80 mb-8 leading-relaxed">
            {dnsHistory.hero.subtitle}
          </p>
          
          <!-- Description -->
          <p class="text-lg text-white/70 mb-12 max-w-2xl mx-auto leading-relaxed">
            {dnsHistory.hero.description}
          </p>
          
          <!-- CTA Buttons -->
          <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
            <Button variant="glass" size="lg" class="text-lg px-8 py-4">
              {dnsHistory.hero.primaryCta}
            </Button>
            <Button variant="outline" size="lg" class="text-lg px-8 py-4 border-white/30 text-white hover:bg-white/10">
              {dnsHistory.hero.secondaryCta}
            </Button>
          </div>
        </div>
      </div>
    </section>

    <!-- Schema / Data Model Section -->
    <section class="py-20 bg-card/50">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8">
        <div class="max-w-6xl mx-auto">
          <div class="text-center mb-16">
            <h2 class="text-3xl sm:text-4xl font-bold text-foreground mb-4">
              {dnsHistory.schema.title}
            </h2>
            <p class="text-xl text-muted-foreground max-w-2xl mx-auto">
              {dnsHistory.schema.description}
            </p>
          </div>
          
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
            <!-- JSON Example -->
            <div>
              <h3 class="text-xl font-semibold text-foreground mb-6">Response Example</h3>
              <div class="glass rounded-lg p-6 border border-white/20">
                <pre class="text-sm text-white/90 overflow-x-auto"><code>{JSON.stringify(dnsHistory.schema.example, null, 2)}</code></pre>
              </div>
            </div>
            
            <!-- Field Descriptions -->
            <div>
              <h3 class="text-xl font-semibold text-foreground mb-6">Key Fields</h3>
              <div class="space-y-4">
                {dnsHistory.schema.fields.map((field) => (
                  <div class="glass rounded-lg p-4 border border-white/20">
                    <div class="flex items-center justify-between mb-2">
                      <span class="font-mono text-primary font-medium">{field.name}</span>
                      <span class="text-xs bg-muted/20 px-2 py-1 rounded text-muted-foreground">{field.type}</span>
                    </div>
                    <p class="text-sm text-white/70">{field.description}</p>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- API Tiers Section -->
    <section class="py-20 bg-background">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-16">
          <h2 class="text-3xl sm:text-4xl font-bold text-foreground mb-4">
            Choose Your Plan
          </h2>
          <p class="text-xl text-muted-foreground max-w-2xl mx-auto">
            Flexible pricing that scales with your needs
          </p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto">
          {dnsHistory.tiers.map((tier, index) => (
            <Card glass={tier.popular} class={`relative ${tier.popular ? 'ring-2 ring-primary scale-105' : ''} border-white/20`}>
              {tier.popular && (
                <div class="absolute -top-4 left-1/2 transform -translate-x-1/2">
                  <span class="bg-primary text-primary-foreground px-4 py-1 rounded-full text-sm font-medium">
                    Most Popular
                  </span>
                </div>
              )}
              
              <CardHeader>
                <CardTitle class="text-white text-2xl">{tier.name}</CardTitle>
                <div class="flex items-baseline mb-2">
                  <span class="text-4xl font-bold text-primary">{tier.price}</span>
                  <span class="text-white/60 ml-2">/{tier.period}</span>
                </div>
                <CardDescription class="text-white/70">
                  {tier.description}
                </CardDescription>
              </CardHeader>
              
              <CardContent>
                <ul class="space-y-3 mb-8">
                  {tier.features.map((feature) => (
                    <li class="flex items-center text-white/80">
                      <svg class="w-5 h-5 text-primary mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      {feature}
                    </li>
                  ))}
                </ul>
                
                {tier.limitations && (
                  <ul class="space-y-2 mb-8">
                    {tier.limitations.map((limitation) => (
                      <li class="flex items-center text-white/60 text-sm">
                        <svg class="w-4 h-4 text-muted-foreground mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                        {limitation}
                      </li>
                    ))}
                  </ul>
                )}
                
                <Button 
                  variant={tier.popular ? "default" : "outline"} 
                  class={`w-full ${!tier.popular ? 'border-white/30 text-white hover:bg-white/10' : ''}`}
                >
                  {tier.name === 'Enterprise' ? 'Contact Sales' : 'Get Started'}
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </section>

    <!-- Use Cases Section -->
    <section class="py-20 bg-card/30">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-16">
          <h2 class="text-3xl sm:text-4xl font-bold text-foreground mb-4">
            Real-World Applications
          </h2>
          <p class="text-xl text-muted-foreground max-w-2xl mx-auto">
            See how DNS History API powers different use cases across industries
          </p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          {dnsHistory.useCases.map((useCase) => {
            const iconMap = {
              'shield-check': `<svg class="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.031 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path></svg>`,
              'clipboard-check': `<svg class="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path></svg>`,
              'bar-chart': `<svg class="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path></svg>`,
              'search': `<svg class="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>`
            };
            
            return (
              <div class="text-center group">
                <!-- Icon -->
                <div class="inline-flex items-center justify-center w-20 h-20 rounded-2xl bg-primary/10 text-primary mb-6 group-hover:bg-primary group-hover:text-primary-foreground transition-all duration-300 group-hover:scale-110">
                  <Fragment set:html={iconMap[useCase.icon]} />
                </div>
                
                <!-- Content -->
                <h3 class="text-xl font-semibold text-foreground mb-4 group-hover:text-primary transition-colors duration-300">
                  {useCase.title}
                </h3>
                <p class="text-muted-foreground leading-relaxed">
                  {useCase.description}
                </p>
              </div>
            );
          })}
        </div>
      </div>
    </section>

    <!-- Pricing Section -->
    <section class="py-20 bg-background">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center max-w-4xl mx-auto">
          <h2 class="text-3xl sm:text-4xl font-bold text-foreground mb-6">
            Ready to Get Started?
          </h2>
          <p class="text-xl text-muted-foreground mb-12">
            Start with our free tier and scale as your needs grow. No credit card required.
          </p>
          
          <div class="flex flex-col sm:flex-row gap-4 justify-center items-center mb-12">
            <Button variant="default" size="lg" class="text-lg px-8 py-4">
              Start Free Trial
            </Button>
            <Button variant="outline" size="lg" class="text-lg px-8 py-4">
              Schedule Demo
            </Button>
          </div>
          
          <!-- Features List -->
          <div class="flex flex-wrap justify-center gap-8 text-muted-foreground">
            <div class="flex items-center">
              <svg class="w-5 h-5 text-green-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              100 free requests/month
            </div>
            <div class="flex items-center">
              <svg class="w-5 h-5 text-green-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              Complete documentation
            </div>
            <div class="flex items-center">
              <svg class="w-5 h-5 text-green-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              24/7 support
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Documentation Preview Section -->
    <section class="py-20 bg-card/50">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8">
        <div class="max-w-6xl mx-auto">
          <div class="text-center mb-16">
            <h2 class="text-3xl sm:text-4xl font-bold text-foreground mb-4">
              Developer-First Documentation
            </h2>
            <p class="text-xl text-muted-foreground max-w-2xl mx-auto">
              Get started quickly with our comprehensive guides and examples
            </p>
          </div>
          
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
            <!-- Sample Request -->
            <div>
              <h3 class="text-xl font-semibold text-foreground mb-6">Sample Request</h3>
              <div class="glass rounded-lg p-6 border border-white/20">
                <pre class="text-sm text-white/90 overflow-x-auto"><code>curl -H "Authorization: Bearer YOUR_API_KEY" \
     -H "Content-Type: application/json" \
     "https://api.zoros.io/v1/dns-history/example.com"</code></pre>
              </div>
            </div>
            
            <!-- Sample Response -->
            <div>
              <h3 class="text-xl font-semibold text-foreground mb-6">Sample Response</h3>
              <div class="glass rounded-lg p-6 border border-white/20">
                <pre class="text-sm text-white/90 overflow-x-auto"><code>{JSON.stringify({
                  "status": "success",
                  "data": {
                    "domain": "example.com",
                    "records": [
                      {
                        "record_type": "A",
                        "ip_address": "192.168.1.1",
                        "timestamp": "2024-01-15T10:30:00Z"
                      }
                    ]
                  }
                }, null, 2)}</code></pre>
              </div>
            </div>
          </div>
          
          <div class="text-center mt-12">
            <Button variant="outline" size="lg" href="/docs">
              View Full Documentation
            </Button>
          </div>
        </div>
      </div>
    </section>
  </main>
  <Footer />
</Layout>
